FrontierVcsFile:3:scpt:system.verbs.apps.Flickr.folderWatcher.init

«Changes
	«1/8/08; 3:00:41 PM by DW
		«Init callbacks.
	«1/6/08; 1:52:31 PM by DW
		«Init user.flickr.folderWatcher.defaults.
	«12/3/07; 11:11:25 AM by DW
		«Init user.flickr.folderWatcher.flBeepAfterUpload.
	«6/15/07; 5:21:53 PM by DW
		«Initialize archive to S3.
	«6/15/07; 3:45:30 PM by DW
		«Initialize local archive folder.
	«6/12/07; 2:07:27 PM by DW
		«Initialize user.flickr.folderWatcher.enabled to true.
Flickr.init ();
if not defined (user.flickr.folderWatcher) {
	new (tabletype, @user.flickr.folderWatcher)};
if not defined (user.flickr.folderWatcher.enabled) {
	user.flickr.folderWatcher.enabled = true};
if not defined (user.flickr.folderWatcher.folder) {
	local (folder);
	if system.environment.isMac {
		folder = file.getspecialfolderpath ("", "desktop folder", false)}
	else {
		folder = file.getspecialfolderpath ("", "desktop", false)};
	folder = folder + "Flickr" + file.getpathchar ();
	user.flickr.folderWatcher.folder = folder;
	file.surefilepath (folder + "xxx")};
if not defined (user.flickr.folderWatcher.ctSecondsBetwScans) {
	user.flickr.folderWatcher.ctSecondsBetwScans = 10};
if not defined (user.flickr.folderWatcher.ctScans) {
	user.flickr.folderWatcher.ctScans = 0};
if not defined (user.flickr.folderWatcher.flLocalArchive) {
	user.flickr.folderWatcher.flLocalArchive = true};
if not defined (user.flickr.folderWatcher.archiveFolder) {
	user.flickr.folderWatcher.archiveFolder = Frontier.pathstring + "Pictures Uploaded" + file.getpathchar ()};
if not defined (user.flickr.folderWatcher.flS3Archive) {
	user.flickr.folderWatcher.flS3Archive = false};
if not defined (user.flickr.folderWatcher.s3Path) {
	user.flickr.folderWatcher.s3Path = ""};
if not defined (user.flickr.folderWatcher.flBeepAfterUpload) {
	user.flickr.folderWatcher.flBeepAfterUpload = true};
bundle { //callbacks
	if not defined (user.flickr.folderWatcher.callbacks) {
		new (tabletype, @user.flickr.folderWatcher.callbacks)};
	if not defined (user.flickr.folderWatcher.callbacks.afterUpload) {
		new (tabletype, @user.flickr.folderWatcher.callbacks.afterUpload)}};
bundle { //user.flickr.folderWatcher.defaults
	if not defined (user.flickr.folderWatcher.defaults) {
		new (tabletype, @user.flickr.folderWatcher.defaults)};
	if not defined (user.flickr.folderWatcher.defaults.description) {
		user.flickr.folderWatcher.defaults.description = "Uploaded by <a href=\"http://flickrfan.org/\">FlickrFan</a>."};
	if not defined (user.flickr.folderWatcher.defaults.tags) {
		user.flickr.folderWatcher.defaults.tags = "FlickrFan"};
	if not defined (user.flickr.folderWatcher.defaults.flpublic) {
		user.flickr.folderWatcher.defaults.flpublic = true};
	if not defined (user.flickr.folderWatcher.defaults.flfriends) {
		user.flickr.folderWatcher.defaults.flfriends = true};
	if not defined (user.flickr.folderWatcher.defaults.flfamily) {
		user.flickr.folderWatcher.defaults.flfamily = true};
	if not defined (user.flickr.folderWatcher.defaults.flnothidden) {
		user.flickr.folderWatcher.defaults.flnothidden = true};
	if not defined (user.flickr.folderWatcher.defaults.safetyLevel) {
		user.flickr.folderWatcher.defaults.safetyLevel = 1}; //safe
	if not defined (user.flickr.folderWatcher.defaults.contentType) {
		user.flickr.folderWatcher.defaults.contentType = 1}} //photo


