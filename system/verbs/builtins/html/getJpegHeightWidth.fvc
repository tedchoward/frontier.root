FrontierVcsFile:3:scpt:system.verbs.builtins.html.getJpegHeightWidth

on getJpegHeightWidth (f) {
	«Changes:
		«6/22/12; 11:45:52 AM by DW
			«We need to cache this, but we don't need to use cache.root. Use a new system.temp table. Smaller footprint.
				«http://worknotes.scripting.com/june2012/62212ByDw/smallerFootprintCacheInHtmlgetjpegheightwidth
		«5/2/09; 7:01:55 PM by DW
			«Maintain a cache of heights and widths in cache.root.
		«10/20/99; at 2:57:07 PM by PBS
			«Like html.getGifHeightWidth, it now supports addresses. It does still write the file out to disk, but in a temporary location, in Guest Databases/ops/Temporary Items/. After writing out the file, it deletes it.
	local (now = clock.now ());
	on kernelcall (f) {
		kernel (string.getJpegHeightWidth)};
	if typeOf (f) == addressType { //write the file to disk in a temporary location
		local (tempFolder = Frontier.getSubFolder ("ops/Temporary Items/"));
		if not (file.exists (tempFolder)) {
			file.newFolder (tempFolder)};
		local (tempFilePath = file.uniqueName ("tempJpeg", tempFolder, 7));
		file.writeWholeFile (tempFilePath, f^, 'JPEG', user.html.prefs.imgFileCreator, clock.now ());
		local (hwList);
		hwList = kernelcall (tempFilePath);
		file.delete (tempFilePath);
		return (hwList)}
	else {
		local (adrcache = @system.temp.htmlJpegeHw, filemod = file.modified (f));
		if not defined (adrcache^) {
			new (tabletype, adrcache)};
		adrcache = @adrcache^.[f];
		if defined (adrcache^) and (adrcache^.filemod >= filemod) {
			adrcache^.ctref++;
			return (adrcache^.hw)};
		new (tabletype, adrcache);
		adrcache^.filemod = filemod;
		adrcache^.hw = kernelcall (f);
		adrcache^.ctref = 0;
		return (adrcache^.hw);
		}}
		«bundle //old cache -- 6/22/12 by DW
			«local (adrcache)
			«local (fmod = file.modified (f))
			«adrcache = mainresponder.cache.getCacheTable ()
			«adrcache = @adrcache^.html
			«if not defined (adrcache^)
				«new (tabletype, adrcache)
			«adrcache = @adrcache^.hwCache
			«if not defined (adrcache^)
				«new (tabletype, adrcache)
			«adrcache = @adrcache^.[f]
			«if defined (adrcache^)
				«if fmod == adrcache^.modified
					«return (adrcache^.hw)
			«new (tabletype, adrcache)
			«adrcache^.modified = fmod
			«local (tc = clock.ticks ())
			«adrcache^.hw = kernelcall (f)
			«adrcache^.ticsToReadFile = clock.ticks () - tc
			«return (adrcache^.hw)
«bundle //test code
	«dialog.alert (getJpegHeightWidth (@websites.samples.["#images"].wozJobs))
	«
	«
	«local (tc = clock.ticks ())
	«for i = 1 to 100
		«getJpegHeightWidth ("Ohio:Pictures:Digital Camera:New Orleans:DSCN4483.JPG")
	«dialog.alert (double (clock.ticks () - tc) / 100)
	«
	«dialog.alert (getJpegHeightWidth ("Ohio:Pictures:Digital Camera:New Orleans:DSCN4483.JPG"))


