FrontierVcsFile:3:scpt:suites.webEditServer.rpcHandlers.webEdit.sendToServer

on sendToServer (userName, password, adrObject, data, objectType, note="") {
	«Changes
		«12/30/11; 10:40:35 AM by DW
			«Don't backup the object if it doesn't exist.
		«12/30/11; 9:00:15 AM by DW
			«If enabled, save out object to a file before it is overwritten. We weren't calling webEditServer.init here, so I added a call so things get properly initialized. 
		«Tue, Mar 9, 1999 at 3:40:53 PM by PBS
			«The client is sending us an object that's checked out, but it shouldn't be checked back in yet. The client is not giving up custody.
	local (adrPreCallback = @user.webEditServer.callbacks.preSendToServer, now = clock.now ());
	local (adrCallback = @user.webEditServer.callbacks.sendToServer);
	webEditServer.init (); //12/30/11 by DW
	if not (people.authenticateUser (userName, password, "WebEdit")) {
		scriptError ("Can't replace " + adrObject + " because an invalid username or password was supplied.")};
	adrObject = webEditServer.fixGuestDbAdr (adrObject);
	if defined (adrObject^) { //make sure it's checked out by this user, if the object already exists.
		if not (custody.isCheckedOutByUser (adrObject, userName)) {
			return ("Can't replace " + adrObject + " because " + userName + " has not checked it out.")}};
	
	data = fatPages.decode (@data);
	setBinaryType (@data, string4 (objectType));
	unpack (@data, @data);
	
	webEditServer.callbackLoop (adrPreCallback, adrObject, userName, now, "");
	
	bundle { //save object to file, if enabled --12/30/11 by DW
		if user.webEditServer.prefs.flBackupObjects {
			if defined (adrObject^) {
				webEditServer.backupObject (adrObject)}}};
	
	table.assign (address (adrObject), data);
	
	webEditServer.callbackLoop (adrCallback, adrObject, userName, now, note);
	
	«Add to the imported objects log.
	export.addToLog (adrObject, notes:"From " + username);
	
	filemenu.saveMyRoot (adrobject);
	
	return (adrObject + " has been replaced on the server.")}


